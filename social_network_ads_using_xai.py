# -*- coding: utf-8 -*-
"""Social Network ADS using XAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ea1Nji6qDyjppvHzdWtOIoyWm2f8kEl2
"""

!pip install eli5



import pandas as pd
import numpy as np
import seaborn as sns
import eli5 as eli
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split

data = pd.read_csv(r'/content/Social_Network_Ads.csv')
print(data.head())

data.isna().sum()

#split the dataset into independent and dependent variables
X = data.iloc[:, [1, 2, 3]]
y = data.iloc[:,[4]]
print("Independent Variables(Predictors) :n", X.head(), "nDependent Variable(Target):n", y.head())

encoder = LabelEncoder()
X.Gender = encoder.fit_transform(X.Gender)
# Splitting the dataset into the Training set and Test set (75:25)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)

# Decision Tree Classifier
classifier_dtc = DecisionTreeClassifier()
classifier_dtc.fit(X_train, y_train)

# Predicting the Test set results
y_pred = classifier_dtc.predict(X_test)

# Making the Confusion Matrix
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
clf_rpt = classification_report(y_test,y_pred)
print("classification report :", clf_rpt)
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm,annot=True)

eli.explain_weights(classifier_dtc)

eli.explain_prediction(classifier_dtc , np.array(X_test)[1])

eli.show_prediction(classifier_dtc, X_test.iloc[1],
                    feature_names=list(X.columns),
                    show_feature_values=True)

eli.show_prediction(classifier_dtc, X_test.iloc[20],
                    feature_names=list(X.columns),
                    show_feature_values=True)

